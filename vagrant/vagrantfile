#comment faire en sorte qu'un conteneur appartienne à un client ? n° port
#situation : 1 client fait une demande au giver - le giver lui envoie un numéro de port via lequel il #pourra accéder à l'application d'un conteneur
#installation services

$script1 = <<-SCRIPT
apt-get update -y
apt-get install -y ansible-core apache2 php libapache2-mod-php php-mysql mysql-server python3-pip
ansible-galaxy collection install community.mysql
sudo systemctl enable mysql
apt-get install python3-pip -y
apt-get install inotify-tools -y
SCRIPT




#spécification de la box (image) pour créer la vm
Vagrant.configure("2") do |config|
  # Common configuration
  config.vm.box = "hashicorp-education/ubuntu-24-04"
  config.vm.box_version = "0.1.0"

  #Les forwarded ports aident pour tester que ça fonctionne à partir du pc hôte
  # il suffit de lancer localhost:8080 dans le navigateur du pc hôte pour accéder au serveur web -> index.php
>>>>>>> 4b0692c (v0.1 lancement automatique de conteneurs)
  config.vm.network "forwarded_port", guest: 80, host: 8080

  #On peut aussi faire avec public network : http://192.168.1.15:8080
  #Aussi on peut accéder à chaque conteneur avec http://192.168.1.15:port_du_conteneur
  config.vm.network "public_network", ip: "192.168.1.15"



#installer Docker 
  config.vm.provision "shell", name: "install-docker", path: "install-docker.sh"

#installer ansible-core apache2 php libapache2-mod-php mysql-server python3-pip 
 config.vm.provision "shell", inline: $script1

#modification mdp root + creation de la bdd
config.vm.provision "shell", name: "init_mysql", path: "init_mysql.sh"

#importation de index.php dans la vm
config.vm.provision "file", source: "webapp/index.php", destination: "/var/www/html/index.php"


config.vm.provision "shell", inline: "test -d /home/vagrant/ansible || mkdir /home/vagrant/ansible"

config.vm.provision "file", source: "playbook.yml", destination: "/home/vagrant/ansible/playbook.yml"

config.vm.provision "file", source: "inventory.ini", destination: "/home/vagrant/ansible/inventory.ini"


config.vm.provision "file", source: "playbook.yml", destination: "/tmp/playbook.yml"
config.vm.provision "file", source: "inventory.ini", destination: "/tmp/inventory.ini"
# 2 étapes pour déplacer les fichiers car sinon il y avait des problèmes de permissions
# Pour l'inventory il est possible que plus tard on ait besoin de lui ajouter les conteneurs pour les configurer avec ansible (je suis absolument pas sûr)
config.vm.provision "shell", inline: "mv /tmp/playbook.yml /home/vagrant/ansible/playbook.yml"
config.vm.provision "shell", inline: "mv /tmp/inventory.ini /home/vagrant/ansible/inventory.ini"

#execution de playbook.yml
  config.vm.provision "shell", inline: "ansible-playbook -i /home/vagrant/ansible/inventory.ini /home/vagrant/ansible/playbook.yml --extra-vars 'first_run=true'"

end







