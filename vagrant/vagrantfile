#comment faire en sorte qu'un conteneur appartienne à un client ? n° port
#situation : 1 client fait une demande au giver - le giver lui envoie un numéro de port via lequel il #pourra accéder à l'application d'un conteneur
#installation services

$script1 = <<-SCRIPT
apt-get update -y
apt-get install -y ansible-core apache2 php libapache2-mod-php mysql-server python3-pip
ansible-galaxy collection install community.mysql
sudo systemctl enable mysql
apt-get install python3-pip -y
SCRIPT




#spécification de la box (image) pour créer la vm
Vagrant.configure("2") do |config|
  # Common configuration
  config.vm.box = "hashicorp-education/ubuntu-24-04"
  config.vm.box_version = "0.1.0"
  config.vm.network "forwarded_port", guest: 80, host: 8080
  config.vm.network "forwarded_port", guest: 3000, host: 3000

#installer Docker 
  config.vm.provision "shell", name: "install-docker", path: "install-docker.sh"

#installer ansible-core apache2 php libapache2-mod-php mysql-server python3-pip 
 config.vm.provision "shell", inline: $script1

config.vm.provision "shell", name: "init_mysql", path: "init_mysql.sh"
config.vm.provision "file", source: "webapp/index.php", destination: "/tmp/index.php"

config.vm.provision "shell", inline: "sudo mv /tmp/index.php /var/www/html/index.php"

config.vm.provision "shell", inline: "test -d /home/vagrant/ansible || mkdir /home/vagrant/ansible"
config.vm.provision "file", source: "playbook.yml", destination: "/tmp/playbook.yml"
config.vm.provision "file", source: "inventory.ini", destination: "/tmp/inventory.ini"
config.vm.provision "shell", inline: "mv /tmp/playbook.yml /home/vagrant/ansible/playbook.yml"
config.vm.provision "shell", inline: "mv /tmp/inventory.ini /home/vagrant/ansible/inventory.ini"

#execution de playbook.yml
  config.vm.provision "shell", inline: "ansible-playbook -i /home/vagrant/ansible/inventory.ini /home/vagrant/ansible/playbook.yml"

end







