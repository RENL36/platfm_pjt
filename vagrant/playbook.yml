---
- name: configuration hôte
  hosts: all
  connection: local

  vars:
    nginx_sites:
      - name: container1
        port: 8081
      - name: container2
        port: 8082
      - name: container3
        port: 8083
    mysql_root_password: "azerty"
    mysql_db_name: "base"
    

  tasks:
    - name: créer + démarrer plusieurs conteneurs web
      docker_container:
        name: "{{ item.name }}"
        image: nginx:latest
        state: started
        ports:
          - "{{ item.port }}:80"
        restart_policy: always
      loop: "{{ nginx_sites }}"

    #créer bdd + créer une table conteneurs + la remplir
    #installation dans le vagrantfile?
    - name: installer serveur MySQL
      apt:
        name: mysql-server
        state: present

    - name: installer connecteur python
      apt:
        name: python3-mysqldb
        state: present

    - name: définir le mot de passe root MySQL 
      mysql_user:
        login_user: root
        login_password: ""
        user: root
        password: "{{ mysql_root_password }}"
        host_all: true
      ignore_errors: yes  # utile au premier run

    - name: créer la BDD
      community.mysql.mysql_db:
        name: "{{ mysql_db_name }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: créer la table conteneurs
      community.mysql.mysql_query:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_db: "{{ mysql_db_name }}"
        query: |
          CREATE TABLE IF NOT EXISTS containers (
              container_id INT AUTO_INCREMENT PRIMARY KEY,
              container_name VARCHAR(100) NOT NULL,
              container_port  VARCHAR(100) NOT NULL
          );

    - name: insertion des conteneurs dans la table
      community.mysql.mysql_query:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_db: "{{ mysql_db_name }}"
        query: |
            INSERT INTO containers(container_name, container_port) VALUES
            ('{{ item.name }}','{{ item.port }}')
      loop: "{{ nginx_sites }}"

    - name: créer la table users
      community.mysql.mysql_query:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_db: "{{ mysql_db_name }}"
        query: |
          CREATE TABLE IF NOT EXISTS users (
          user_id INT AUTO_INCREMENT PRIMARY KEY,
          user_name VARCHAR(100) NOT NULL,
          user_firstname VARCHAR(100) NOT NULL,
          container_id INT,
          FOREIGN KEY(container_id) REFERENCES containers(container_id)   
          );
